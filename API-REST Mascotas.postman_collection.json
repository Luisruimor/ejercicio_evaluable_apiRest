{
	"info": {
		"_postman_id": "b9f8735f-ac8f-41e3-a6a1-3924d0812cc0",
		"name": "API-REST Mascotas",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "30274669"
	},
	"item": [
		{
			"name": "Todas las mascotas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://ejercicio27oct.deno.dev/api/mascotas",
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Mascota por Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ejercicio27oct.deno.dev/api/mascotas/:id",
					"protocol": "https",
					"host": [
						"ejercicio27oct",
						"deno",
						"dev"
					],
					"path": [
						"api",
						"mascotas",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "653b8d937a7c24a33a6b9dce"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AÃ±adir Mascota",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"pepus\",\n    \"description\": \"negro con lunares azules\",\n    \"type\": \"Serpiente\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://ejercicio27oct.deno.dev/api/mascotas",
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Eliminar Mascota",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ejercicio27oct.deno.dev/api/mascotas/:id",
					"protocol": "https",
					"host": [
						"ejercicio27oct",
						"deno",
						"dev"
					],
					"path": [
						"api",
						"mascotas",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "653b8d937a7c24a33a6b9dce"
						}
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}